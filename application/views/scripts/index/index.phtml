<header class="jumbotron subhead">
    <h1>Hobo is a CMS Component for Zend Framework</h1>
</header>
<p class="lead">The Hobo project is a collection of javascript, a Zend Framework Module, and supporting PHP libraries.</p>
<h3>Project Goals:</h3>
<ul>
    <li>Provide in-context editing tools for Zend Framework developers to integrate with new or old projects</li>
    <li>Define editable areas in view files</li>
    <li>Make it easy for developers to create custom content types</li>
    <li>Integrate with your existing user authentication system</li>
</ul>

<h2>Installation</h2>
<ol>
    <li>Download the <a href="<?php echo $this->baseUrl(); ?>/builds/<?php echo $this->latestBuild; ?>">latest package</a>
    and copy all files into your Zend Framework project.
    <pre>
wget <?php echo $this->serverUrl() . $this->baseUrl(); ?>/builds/<?php echo $this->latestBuild; ?>

tar xvf ./<?php echo $this->latestBuild; ?>
</pre>
    </li>
    <li>
        Set the following config values in your application.ini file. Depending on your existing configuration,
        you may either need to add or change the following lines:
<pre>
autoloaderNamespaces[] = "Hobo_"
resources.frontController.actionHelperPaths.Hobo_Controller_Action_Helper = "Hobo/Controller/Action/Helper"
resources.frontController.returnResponse = true
resources.frontController.moduleDirectory = APPLICATION_PATH "/modules"
resources.modules = On
</pre>
    </li>
    <li>
        Ensure that you've correctly configured a mysql database connection in application.ini.
    </li>
    <li>You're now ready to visit the hobo installer at: /hobo/installer. The installer will create the database tables
    necessary for operation only if they don't already exist.</li>
</ol>
<h2>Setting up editable areas</h2>
Editable areas are defined in view files. The key is to add an html5 data attribute to any element that is intended to contain managed content. This element is called data-hobo, and its value is a json encoded object. This json defines three properties:
<ul>
<li>isGlobal: Is this item global? Set to true for any piece of content that will be used across multiple pages.</li>
<li>handle: This is the internal title for the piece of content, (ex. footer).</li>
<li>contentType: Defines which plugin will handle editing, saving and displaying this content data (ex. tinyMce).</li>
    <pre>
        <?php echo htmlspecialchars(
        '<!-- This content uses a plain text editor.-->
<h1 data-hobo=\'{"isGlobal": false, "handle": "title", "contentType": "plainText"}\'>
        </h1>

        <div data-hobo=\'{"isGlobal": false, "handle": "introText", "contentType": "tinyMce"}\'>
            This content uses a rich text editor. The first time this view files is loaded, Hobo will store content that resides 
            in this editable area as the initial version.
        </div>'); ?>
    </pre>
 <h2>Creating plugins</h2>
